apply plugin: 'com.android.application'

//Load properties file
def properties = new Properties()
properties.load(new FileInputStream(rootProject.file('keystore.properties')))

android {
    // For room database schema
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    signingConfigs {
        release {
            storeFile file(properties['storeFile'])
            storePassword properties['storePassword']
            keyAlias = properties['keyAlias']
            keyPassword properties['keyPassword']
        }
    }
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.utilities.vibal.utilities"
        minSdkVersion 24
        targetSdkVersion 29
        versionCode 25
        versionName "3.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        resValue "string", "aboutApp", "Utilities v" + versionName + "\\n\\nvibal " +
                (new Date().format("dd/MM/yyyy"))
        buildConfigField "String", "ONLINE_PWD", properties['onlinePwd']

        // For room database schema
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildFeatures  {
        viewBinding = true
    }
    buildTypes {
        release {
            minifyEnabled false

            // I don't know why but it does not work with optimization
//            // Enables code shrinking, obfuscation, and optimization for only
//            // your project's release build type.
//            minifyEnabled true
//            // Enables resource shrinking, which is performed by the
//            // Android Gradle plugin.
//            shrinkResources true
//            // Includes the default ProGuard rules files that are packaged with
//            // the Android Gradle plugin
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            signingConfig signingConfigs.release
            buildConfigField "boolean", "DEBUG_MODE", "false"
            buildConfigField "String", "BASE_URL", properties['baseUrl']
        }
        debug {
            buildConfigField "boolean", "DEBUG_MODE", "true"
            resValue "string", "aboutApp", "Utilities debug " + getVersion()
            applicationIdSuffix ".debug"
            buildConfigField "String", "BASE_URL", "\"https://192.168.0.41/util/\""
        }
    }
    flavorDimensions "version"
    productFlavors {
        open {
            dimension "version"
        }
        full {
            dimension "version"
            versionNameSuffix "-full"
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

// For GitHub repositories
repositories {
    maven { url 'https://jitpack.io' }
}

dependencies {
    def lifecycle_version = '2.2.0'
    def room_version = '2.2.6'
    def work_version = '2.4.0'
    def retrofit_version = '2.9.0'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.3.0-beta01'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test:runner:1.3.1-alpha03'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0-alpha03'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.2.0'

//    // Butterknife
//    implementation 'com.jakewharton:butterknife:10.2.1'
//    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'

    // Lyfecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"

    // RxJava
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.13'

    // WorkManager
    implementation "androidx.work:work-runtime:$work_version"
    implementation "androidx.work:work-rxjava2:$work_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    // GitHub

    // Charts
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
    // Material Spinner
    implementation 'com.jaredrummler:material-spinner:1.3.1'
    // Expandable Layout
    implementation 'net.cachapa.expandablelayout:expandablelayout:2.9.2'
}
